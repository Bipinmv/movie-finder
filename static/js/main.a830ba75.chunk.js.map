{"version":3,"sources":["components/Home.js","config/Constants.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","year","yearErr","movieData","state","setState","columns","dataField","text","formatter","value","row","href","imdbID","target","rel","headerClasses","className","Form","Row","Control","type","id","placeholder","onChange","e","aria-describedby","required","Text","muted","Button","onClick","currentYear","Date","getFullYear","isFourDigit","test","axios","get","headers","then","res","response","data","catch","error","console","log","size","variant","length","keyField","bodyClasses","striped","hover","bordered","bootstrap4","MovieNavbar","Navbar","collapseOnSelect","expand","sticky","Toggle","aria-controls","Brand","Nav","Link","as","NavLink","to","path","component","exact","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAgFeA,EAzEF,WACT,MAA0BC,mBAAS,CAAEC,KAAM,GAAIC,QAAS,GAAIC,UAAW,KAAvE,mBAAOC,EAAP,KAAcC,EAAd,KAiCMC,EAAU,CACZ,CAAEC,UAAW,QAASC,KAAM,iBAAkBC,UALhC,SAACC,EAAOC,GACtB,OAAO,mBAAGC,KCrCM,8BDqCWD,EAAIE,OAAQC,OAAO,SAASC,IAAI,aAApD,SAAkEL,KAILM,cAAe,+CAGvF,OACI,sBAAKC,UAAU,iBAAf,UACI,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,IAAN,WACI,cAACD,EAAA,EAAKE,QAAN,CAAcC,KAAK,SACfC,GAAG,OACHC,YAAY,oCACZb,MAAON,EAAMH,KACbuB,SA3CC,SAACC,GAClBpB,EAAS,2BAAKD,GAAN,IAAaH,KAAMwB,EAAEX,OAAOJ,UA2CpBgB,mBAAiB,gBACjBC,UAAQ,IAEZ,cAACT,EAAA,EAAKU,KAAN,CAAWN,GAAG,gBAAgBL,UAAU,cAAcY,OAAK,EAA3D,SAA6DzB,EAAMF,aAEvE,qBAAKe,UAAU,gCAAf,SACI,cAACa,EAAA,EAAD,CAAQC,QA9CN,WACd,IAAIC,GAAc,IAAIC,MAAOC,cACzBC,EAAc,UAAUC,KAAKhC,EAAMH,MACvC,GAAmB,KAAfG,EAAMH,MAA8B,OAAfG,EAAMH,MAAiBG,EAAMH,MAAQ+B,IAAgBG,EAC1E9B,EAAS,2BAAKD,GAAN,IAAaF,QAAS,iCAE7B,CACDG,EAAS,2BAAKD,GAAN,IAAaF,QAAS,MAO9BmC,IAAMC,IC5BK,mDD4BSlC,EAAMH,KANR,CACdsC,QAAS,CACL,eAAgB,iCAChB,8BAA+B,OAGMC,MAAK,SAAAC,GAC9C,IAAIC,EAAWD,EAAIE,KAAKA,KACxBtC,EAAS,2BAAKD,GAAN,IAAaD,UAAWuC,QACjCE,OAAM,SAAAC,GAEL,OADAC,QAAQC,IAAI,CAAEF,UACPA,OA2ByBG,KAAK,KAAKC,QAAQ,UAAUhC,UAAU,uBAAlE,yBAGPb,EAAMD,UAAU+C,QAAU,GACvB,cAAC,IAAD,CACIC,SAAS,SACTR,KAAMvC,EAAMD,UACZG,QAASA,EACTU,cAAc,qBACdoC,YAAY,mBACZC,SAAO,EACPC,OAAK,EACLC,UAAU,EACVC,YAAY,QEjDjBC,EAlBK,WAChB,OACI,qCACI,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKX,QAAQ,QAAQY,OAAO,MAAM5C,UAAU,WAA5E,UACI,cAACyC,EAAA,EAAOI,OAAR,CAAeC,gBAAc,0BAC7B,cAACL,EAAA,EAAOM,MAAR,UACI,cAACC,EAAA,EAAIC,KAAL,CAAUC,GAAIC,IAASC,GAAG,IAA1B,SACI,wBAAQpD,UAAU,QAAlB,iCAIZ,cAAC,IAAD,UACI,cAAC,IAAD,CAAOqD,KAAK,IAAIC,UAAWxE,EAAMyE,OAAK,U,OCLvCC,MARf,WACE,OACE,cAAC,IAAD,CAAeC,SAAS,gBAAxB,SACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a830ba75.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { API_URL, IMDB_URL } from '../config/Constants';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nconst Home = () => {\r\n    const [state, setState] = useState({ year: '', yearErr: '', movieData: [] });\r\n\r\n    const onYearChange = (e) => {\r\n        setState({ ...state, year: e.target.value });\r\n    }\r\n\r\n    const getMovies = () => {\r\n        let currentYear = new Date().getFullYear();\r\n        let isFourDigit = /^\\d{4}$/.test(state.year);\r\n        if (state.year === '' || state.year === null || state.year >= currentYear || !isFourDigit) {\r\n            setState({ ...state, yearErr: 'Please enter valid year' });\r\n        }\r\n        else {\r\n            setState({ ...state, yearErr: '' });\r\n            let axiosConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                },\r\n            };\r\n            axios.get(API_URL + state.year, axiosConfig).then(res => {\r\n                let response = res.data.data;\r\n                setState({ ...state, movieData: response });\r\n            }).catch(error => {\r\n                console.log({ error });\r\n                return error;\r\n            });\r\n        }\r\n    }\r\n    const goToMovie = (value, row) => {\r\n        return <a href={IMDB_URL + row.imdbID} target='_blank' rel=\"noreferrer\">{value}</a>\r\n    }\r\n\r\n    const columns = [\r\n        { dataField: 'Title', text: 'List of movies', formatter: goToMovie, headerClasses: 'd-flex justify-content-center bg-secondary' }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <Form>\r\n                <Form.Row>\r\n                    <Form.Control type=\"number\"\r\n                        id=\"year\"\r\n                        placeholder=\"Enter the year you want to search\"\r\n                        value={state.year}\r\n                        onChange={onYearChange}\r\n                        aria-describedby=\"yearHelpBlock\"\r\n                        required\r\n                    />\r\n                    <Form.Text id=\"yearHelpBlock\" className=\"text-danger\" muted>{state.yearErr}</Form.Text>\r\n                </Form.Row>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <Button onClick={getMovies} size=\"md\" variant=\"primary\" className=\"text-light mt-3 mb-5\">Submit</Button>\r\n                </div>\r\n            </Form>\r\n            {state.movieData.length >= 1 &&\r\n                <BootstrapTable\r\n                    keyField='imdbID'\r\n                    data={state.movieData}\r\n                    columns={columns}\r\n                    headerClasses=\"table-header-class\"\r\n                    bodyClasses=\"table-body-class\"\r\n                    striped\r\n                    hover\r\n                    bordered={false}\r\n                    bootstrap4={true}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","export const API_URL = \"https://jsonmock.hackerrank.com/api/movies?Year=\";\r\nexport const IMDB_URL = \"https://www.imdb.com/title/\";","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Route, NavLink, Switch } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport Home from './Home';\r\n\r\nconst MovieNavbar = () => {\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect expand=\"lg\" variant=\"light\" sticky=\"top\" className=\"bg-light\">\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Brand >\r\n                    <Nav.Link as={NavLink} to=\"/\">\r\n                        <strong className=\"brand\">Movie Finder</strong>\r\n                    </Nav.Link>\r\n                </Navbar.Brand>\r\n            </Navbar>\r\n            <Switch>\r\n                <Route path=\"/\" component={Home} exact />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieNavbar;","import { BrowserRouter } from 'react-router-dom';\r\nimport './App.css'\r\nimport MovieNavbar from './components/Navbar';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename=\"/movie-finder\">\r\n      <MovieNavbar />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}